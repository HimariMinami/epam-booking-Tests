package accommodations_attr;

import java.util.List;

import org.openqa.selenium.By;
import org.openqa.selenium.NoSuchElementException;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.FindBy;
import org.testng.Assert;

public class BookingDestinationAllActivitiesPage {

	@FindBy (className = "css-4zzkap")
	private WebElement cityHeader;
	
	@FindBy (xpath = "//div[@class=\"css-1nha944\"]//div[@class=\"css-1qm1lh\"][1]")
	private WebElement firstAttraction;
	
	@FindBy (xpath = "//div[@class=\"css-1nha944\"]//div[@class=\"css-1qm1lh\"][1]//div[@class=\"css-9ijqjz\"]")
	private WebElement costFirstAttraction;
	
	private static final String ALL_ACTIVITIES = "//div[@class=\"css-1qm1lh\"]";
	
	private final String firstAnotherNumTA;
	private final String firstAnotherCNameTA;
	
	private String costFAttr;
	
	public BookingDestinationAllActivitiesPage()
	{
		this.firstAnotherNumTA = "";
		this.firstAnotherCNameTA = "";
	}
	
	public BookingDestinationAllActivitiesPage(String firstAnotherNumTA, String firstAnotherCNameTA)
	{
		this.firstAnotherNumTA = firstAnotherNumTA;
		this.firstAnotherCNameTA = firstAnotherCNameTA;
	}
	
	
	public void a1(WebDriver driver, int num)
	{
		Assert.assertTrue((cityHeader.getText()).contains(firstAnotherCNameTA), "The city header is not correct!");
		Assert.assertTrue(NumParamIsCorrect(driver, Integer.parseInt(firstAnotherNumTA), ALL_ACTIVITIES), "The number of activities is not correct!");		
	}
	
	public BookingActivityPage accomodationDescription(WebDriver driver, String place, int num) throws InterruptedException
	{		
		costFAttr = costFirstAttraction.getText();
		firstAttraction.click();
				
		return new BookingActivityPage(costFAttr);
	}
	
	// Проверка на соответствие количества мест проживания c определенным параметром
	public boolean NumParamIsCorrect(WebDriver driver, int num, String clN)
	{
		try
		{
			List<WebElement> elements = driver.findElements(By.xpath(clN));
			if(elements.size() >= num)
			{
				return true;
			}
			else
			{ 
				return false;
			}
		}
		catch(NoSuchElementException e)
		{
			return false;
		}
	}	
}
