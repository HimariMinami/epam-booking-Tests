package accommodations_attr;

import java.util.Iterator;
import java.util.Set;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.FindBy;
import org.testng.Assert;

public class BookingBookApartmentPage {

	@FindBy (xpath = "//h2[@id=\"hp_hotel_name\"]")
	private WebElement nameApart;
	
	@FindBy (xpath = "//div[@id=\"right\"]//form/button[@id=\"hcta\"]")
	private WebElement bookBtn;
	
	@FindBy (xpath = "//div[@class=\"hp-section-3-col\"][1]//div[contains(@class,\"hp-date-input\")]")
	private WebElement dataFieldIn;
	
	@FindBy (xpath = "//div[@class=\"hp-section-3-col\"][2]//div[contains(@class,\"hp-date-input\")]")
	private WebElement dataFieldOut;
	
	@FindBy (xpath = "//div[@class=\"hp-section-3-col\"][1]//div[@class=\"c2-month\"][1]//tbody/tr[5]/td[1]")
	private WebElement dataFieldCheckInWeek;
	
	@FindBy (xpath = "//div[@class=\"hp-section-3-col\"][2]//div[@class=\"c2-month\"][1]//tbody/tr[5]/td[7]")
	private WebElement dataFieldCheckOutWeek;
	
	@FindBy (xpath = "//div[@class=\"hp-section-3-col\"]/button[contains(@class,\"b-button\")]")
	private WebElement searchAPlaces;
	
	private final String apartName;
	
	public BookingBookApartmentPage() {
		this.apartName = "";
	}
	
	public BookingBookApartmentPage(String apartName) {
		this.apartName = apartName;
	}

	@FindBy (xpath = "//span[@class = \"sb-searchbox__title-text\"]")
	private WebElement ApartHeader;
	
	public BookingAccomodationsPage openApartmentDescriptionPage(WebDriver driver) throws InterruptedException
	{
		Assert.assertTrue((nameApart.getText()).contains(apartName), "The name of apartment is not correct!");
		
		bookBtn.click();
		
		dataFieldIn.click();
		dataFieldCheckInWeek.click();
		
		dataFieldOut.click();
		dataFieldCheckOutWeek.click();
		
		searchAPlaces.click();
		
		changeWindow(driver);
		
		return new BookingAccomodationsPage();
	}

	public void changeWindow(WebDriver driver) throws InterruptedException
	{
		Set<String> windows = driver.getWindowHandles();
	    Iterator<String> itr = windows.iterator();
	    
	    //patName will provide you parent window
	    String patName = itr.next();
	    //System.out.println("parentWindow Handle"+patName);

	    //chldName will provide you child window
	    String chldName = itr.next();
	    //System.out.println("childWindow Handle"+chldName);

	    //Switch to child window
	    driver.switchTo().window(chldName);
		
        Thread.sleep(5000);
	}
}
